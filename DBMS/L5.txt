CREATE TABLE STUDENT (
    regno VARCHAR(10) PRIMARY KEY,
    name VARCHAR(15),
    major VARCHAR(10),
    bdate DATE
);

CREATE TABLE COURSE (
    course# INT PRIMARY KEY,
    cname VARCHAR(10),
    dept VARCHAR(10)
);

CREATE TABLE ENROLL (
    regno VARCHAR(10),
    course# INT,
    PRIMARY KEY (regno, course#),
    FOREIGN KEY (regno) REFERENCES STUDENT(regno),
    FOREIGN KEY (course#) REFERENCES COURSE(course#)
);

CREATE TABLE BOOK_ADOPTION (
    course# INT,
    sem INT,
    book_isbn INT,
    PRIMARY KEY (course#, sem, book_isbn),
    FOREIGN KEY (course#) REFERENCES COURSE(course#),
    FOREIGN KEY (book_isbn) REFERENCES TEXT(book_isbn)
);

CREATE TABLE TEXT (
    book_isbn INT PRIMARY KEY,
    booktitle VARCHAR(10),
    publisher VARCHAR(10),
    author VARCHAR(10)
);

-- Insert tuples into tables
-- You can add more tuples as needed
INSERT INTO STUDENT VALUES ('ABC-001', 'John', 'Computer', '2-FEB-2003');
INSERT INTO STUDENT VALUES ('ABC-002', 'Jane', 'Math', '5-APR-2003');
INSERT INTO STUDENT VALUES ('ABC-003', 'Bob', 'Physics', '5-FEB-2000');
INSERT INTO STUDENT VALUES ('ABC-004', 'Alice', 'Chemistry', '5-FEB-2000');
INSERT INTO STUDENT VALUES ('ABC-005', 'Eva', 'Biology', '24-AUG-2003');

INSERT INTO COURSE VALUES (101, 'Database', 'Computer');
INSERT INTO COURSE VALUES (102, 'Linear', 'Math');
INSERT INTO COURSE VALUES (103, 'Quantum', 'Physics');
INSERT INTO COURSE VALUES (104, 'Organic', 'Chemistry');
INSERT INTO COURSE VALUES (105, 'Genetics', 'Biology');

INSERT INTO ENROLL VALUES ('ABC-001', 101);
INSERT INTO ENROLL VALUES ('ABC-001', 102);
INSERT INTO ENROLL VALUES ('ABC-002', 102);
INSERT INTO ENROLL VALUES ('ABC-003', 103);
INSERT INTO ENROLL VALUES ('ABC-004', 104);

INSERT INTO TEXT VALUES (1, 'Database ', 'Pearson', 'David ');
INSERT INTO TEXT VALUES (2, 'Linear', 'Wiley', 'David');
INSERT INTO TEXT VALUES (3, 'Quantum M', 'Springer', 'R. Shar');
INSERT INTO TEXT VALUES (4, 'Chemistry', 'Pearson', 'Paula');
INSERT INTO TEXT VALUES (5, 'Genetics', 'McGraw', 'Leland ');

INSERT INTO BOOK_ADOPTION VALUES (101, 1, 1);
INSERT INTO BOOK_ADOPTION VALUES (102, 1, 2);
INSERT INTO BOOK_ADOPTION VALUES (103, 1, 3);
INSERT INTO BOOK_ADOPTION VALUES (104, 1, 4);
INSERT INTO BOOK_ADOPTION VALUES (105, 1, 5);


````````````````````````L4 Q3 a `````````````````````````````
select cname from course
where course# in ( select course# from book_adoption
group by course#
having count(course#) > 1);

````````````````````````L4 Q3 b ``````````````````````````````
SELECT DISTINCT C.DEPT
FROM COURSE C
WHERE NOT EXISTS (
	SELECT *
	FROM BOOK_ADOPTION BA
	WHERE BA.COURSE# = C.COURSE#
	AND BA.BOOK_ISBN NOT IN (
		SELECT T.BOOK_ISBN
		FROM TEXT T
		WHERE T.PUBLISHER = 'Pearson'
	)
);

````````````````````````L4 Q3 c ``````````````````````````````
select name, count(distinct dept) as number_of_departments
from student natural join course natural join enroll
where regno in (
    select regno from enroll
    group by regno 
    having count (dept) >= 2
    )
group by name;

````````````````````````L4 Q3 d ``````````````````````````````
select regno,name
from student
where regno not in ( select regno 
		from enroll);

````````````````````````L4 Q3 e```````````````````````````````
select distinct booktitle
from text natural join book_adoption natural join course
where course# in (
select course# from
enroll);

````````````````````````L4 Q3 f```````````````````````````````

SELECT BA.COURSE#
FROM BOOK_ADOPTION BA
WHERE BA.BOOK_ISBN IN (
SELECT T.BOOK_ISBN
FROM TEXT T
WHERE T.PUBLISHER = 'Pearson'
)
GROUP BY BA.COURSE#
HAVING COUNT(DISTINCT BA.BOOK_ISBN) >= 2;

````````````````````````L4 Q3 g```````````````````````````````

select name, regno, count(regno) as num_of_books
from student natural join enroll natural join book_adoption
group by name, regno
having count(regno)> all (
select count(book_isbn)
from book_adoption
group by course#);

````````````````````````L4 Q3 h```````````````````````````````

select publisher, count(distinct book_isbn) as number_of_books_published
from text
group by publisher;


````````````````````````L4 Q3 i```````````````````````````````

SELECT regno,name
FROM enroll natural join student
minus
( SELECT regno,name
FROM enroll natural join student
where course# not in (
SELECT course#
FROM book_adoption)
);